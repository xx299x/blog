<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>暂无标签 on 一品书生</title><link>https://blog.sbat.top/tags/%E6%9A%82%E6%97%A0%E6%A0%87%E7%AD%BE/</link><description>Recent content in 暂无标签 on 一品书生</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 08 Apr 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.sbat.top/tags/%E6%9A%82%E6%97%A0%E6%A0%87%E7%AD%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>数学因式分解专项学习</title><link>https://blog.sbat.top/post/%E6%95%B0%E5%AD%A6%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E4%B8%93%E9%A1%B9%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/%E6%95%B0%E5%AD%A6%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E4%B8%93%E9%A1%B9%E5%AD%A6%E4%B9%A0/</guid><description>什么是因式分解 乘法展开的逆运算 提公因式法（factor out GCF） 注意：提公因式要提干净。 分组分解法（Grouping） 十字交乘法 公式法（By Identities） 拆项法（Splitting terms） 添项法（Adding&amp;amp;Subtr</description></item><item><title>新东方田静大学英语四六级语法</title><link>https://blog.sbat.top/post/%E6%96%B0%E4%B8%9C%E6%96%B9%E7%94%B0%E9%9D%99%E5%A4%A7%E5%AD%A6%E8%8B%B1%E8%AF%AD%E5%9B%9B%E5%85%AD%E7%BA%A7%E8%AF%AD%E6%B3%95/</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/%E6%96%B0%E4%B8%9C%E6%96%B9%E7%94%B0%E9%9D%99%E5%A4%A7%E5%AD%A6%E8%8B%B1%E8%AF%AD%E5%9B%9B%E5%85%AD%E7%BA%A7%E8%AF%AD%E6%B3%95/</guid><description>导学 句子为核心 一件事 简单句 多件事 多个句子连接 并列句 复合句 重点不同 简单句 简单句的核心构成 n. + v. 主语 + 谓语 谓语动词分类 实义动词 动词是否独立完成区分及物动词和不及物动词 - 不及物动词 - 主谓 vi. - 及物动词 动作涉及到了其他物 - 主谓宾 - 主谓双宾 授予动词 - 表</description></item><item><title>英语思维 解密英语语法的原理读书笔记</title><link>https://blog.sbat.top/post/%E8%8B%B1%E8%AF%AD%E6%80%9D%E7%BB%B4-%E8%A7%A3%E5%AF%86%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%9A%84%E5%8E%9F%E7%90%86_14194104/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/%E8%8B%B1%E8%AF%AD%E6%80%9D%E7%BB%B4-%E8%A7%A3%E5%AF%86%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%9A%84%E5%8E%9F%E7%90%86_14194104/</guid><description>小技巧 谓语动词 在主动时态中，只有 完成进行时态 有 been 在被动态中，有been的有两种情况 完成态 完成进行态 的被动有 being 非谓动词 不定态中有be，和been的为被动语态 进行态中有being的为被动语态，有been的要么完成态，要么完成进行态。 英语思维 解密</description></item><item><title>R语言知识点总结</title><link>https://blog.sbat.top/post/2019-12-24t0900/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/2019-12-24t0900/</guid><description>数据对象类基本类型 查看数据类型 注意：数据类型和数据对象类型并不相同。具体查看一下链接：https://www.jianshu.com/p/47a15297a5f2 Names function str() 查看数据对象类型，如果是 class() 查看数据对象类型 str() 查看数据对象类型，如果是 mode() 查</description></item><item><title>第五项修炼 知识笔记</title><link>https://blog.sbat.top/post/%E7%AC%AC%E4%BA%94%E9%A1%B9%E4%BF%AE%E7%82%BC%E5%AD%A6%E4%B9%A0%E5%9E%8B%E7%BB%84%E7%BB%87%E7%9A%84%E8%89%BA%E6%9C%AF%E4%B8%8E%E5%AE%9E%E8%B7%B51%E7%8F%8D%E8%97%8F%E7%89%88%E7%BE%8E%E5%BD%BC%E5%BE%97%E5%9C%A3%E5%90%89%E8%91%97/</link><pubDate>Sat, 14 Dec 2019 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/%E7%AC%AC%E4%BA%94%E9%A1%B9%E4%BF%AE%E7%82%BC%E5%AD%A6%E4%B9%A0%E5%9E%8B%E7%BB%84%E7%BB%87%E7%9A%84%E8%89%BA%E6%9C%AF%E4%B8%8E%E5%AE%9E%E8%B7%B51%E7%8F%8D%E8%97%8F%E7%89%88%E7%BE%8E%E5%BD%BC%E5%BE%97%E5%9C%A3%E5%90%89%E8%91%97/</guid><description>&lt;h2 id="系统思考">系统思考&lt;/h2>
&lt;p>在很久以前，我在解决问题的时候，总有很多困惑。比如制定学习方向，你当前学习的是否真的有用？学习什么东西是最划算的？真的不知道现在学的这些对我的影响有多大。还有当决策一件事情的时候，当时根本无法评判该决策带来的后果，我比较喜欢对事物有绝对的把控。&lt;!-- raw HTML omitted -->
某一天，我突然想到，系统思考可能是方向，故检索到了这本书。&lt;!-- raw HTML omitted -->
这本书是将如何管理公司、组织，是一名适合管理者的书，但我并不是管理者。我只想管好我自己，决定好生活中的每一件事情，既然是系统，我就可以套用，把他套用到我的生活中来。&lt;/p></description></item><item><title>蓝桥杯算法练习</title><link>https://blog.sbat.top/post/2019-12-07t2052/</link><pubDate>Sat, 07 Dec 2019 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/2019-12-07t2052/</guid><description>比赛信息 考题形式 填空题只要答案 编程大题要求只能使用编程解决问题，要尽可能考虑可行性和效率问题。 考察范围 入门篇 斐波那契函数（Fibonacci） +name: Fibonacci class Fibonacci: @staticmethod def Recursion(n): if n == 0: return 0 elif n == 1: return 1 else: return __class__.Recursion(n-1) + __class__.Recursion(n-2) @staticmethod def GeneralFor(n): if n == 0: return 0 elif n == 1: return 1 else: pre = 0 next = 1 for _ in</description></item><item><title>Python查缺补漏和实用技巧</title><link>https://blog.sbat.top/post/2019-12-05t2139/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0800</pubDate><guid>https://blog.sbat.top/post/2019-12-05t2139/</guid><description>输入输出重定向 test.py &amp;lt; command.txt &amp;gt; output.txt Python技巧OR特性 Python 整洁之道 断言 assert expression1 expression2 当expression1为F时，出发expression2 字符串输入的技巧 charTest = (&amp;#34;I am text 1,&amp;#34; &amp;#34;I am text 2,&amp;#34; &amp;#34;I am text 3&amp;#34;) print(charTest) 字符串会自动合并，将三段字符串全部合并。 巧妙地放置逗号 listTest = [1, 2, 3, 4 ]</description></item></channel></rss>